/*******************************************************************************
 * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *******************************************************************************/
 /*
 * generated by Xtext
 */
package de.dlr.sc.virsat.model.concept.validation

import de.dlr.sc.virsat.model.dvlm.concepts.Concept
import de.dlr.sc.virsat.model.dvlm.general.GeneralPackage
import org.eclipse.core.resources.ResourcesPlugin
import org.eclipse.core.runtime.Path
import org.eclipse.xtext.validation.Check

/**
 * Validator with all checks - inherited core checks from the core validator
 * and checks that require certain environment setup which we want to skip in most unit tests
 */
 class ConceptLanguageExtendedValidator extends ConceptLanguageValidator {

	public static val CONCEPT_NAME_PLUGIN_NAME_MISMATCH = 'conceptNamePluginNameMismatch'
	
	@Check
	def CheckConceptNameEqualsToPluginName(Concept concept) {
		val platformString = concept.eResource.URI.toPlatformString(true);
    	val currentFile = ResourcesPlugin.getWorkspace().getRoot().getFile(new Path(platformString));
    	val projectName = currentFile.getProject().name;
		if (!concept.name.equals(projectName)){
				error('Concept must have the same name as the plugin in which it is contained: '+projectName, 
					GeneralPackage.Literals.IQUALIFIED_NAME__NAME,
					CONCEPT_NAME_PLUGIN_NAME_MISMATCH)
		}
	}
}
